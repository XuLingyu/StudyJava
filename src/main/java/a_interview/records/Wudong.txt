Project Related:
1、时间乱序
在多队列消息处理的场景中，怎样保持多个消息之间的时间顺序，是一个很经典的问题。解决方法当然是有的。
为了讨论这个问题，让我们做一些简化问题的假设：

I   有若干个消息队列A、B、C……
II  有若干个线程在产生消息，并分别将消息加入这些队列
III 每个消息队列有一个对应的线程（WorkerA、WorkerB、Worker C……），从队列中读取和处理消息

另外，还有一个很重要的前提：要保持多个消息之间的时间顺序，首先它们要有一个全局的时间顺序。因此，每个消息在被创建时，
都将被赋予一个全局唯一的、单调递增的、连续的序列号（SerialNumber，SN）。可以通过一个全局计数器来实现这一点。
通过比较两个消息的SN，确定其先后顺序。

https://www.zhihu.com/question/27707687/answer/84464928

2、服务崩溃
I  提高硬件能力、增加系统服务器。（当服务器增加到某个程度的时候系统所能提供的并发访问量几乎不变，所以不能根本解决问题）
II REDIS缓存集群

Java Related
1、类加载
虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验，解析和初始化，最终形成可以被虚拟机直接使用的java类型。
执行过程：
加载：根据查找路径找到相应的 class 文件然后导入；
验证：检查加载的 class 文件的正确性；
准备：给类中的静态变量分配内存空间；
解析：虚拟机将常量池中的符号引用替换成直接引用的过程。符号引用就理解为一个标示，而在直接引用直接指向内存中的地址；
初始化：对静态变量和静态代码块执行初始化工作。

2、类加载冲突
先解释类加载器
当一个类收到了类加载请求时，不会自己先去加载这个类，而是将其委派给父类，由父类去加载，如果此时父类不能加载，反馈给子类，由子类去完成类的加载。
同一个ClassLoader实例加载的类不能重复（不同的class文件，同样的类名也是重复），如果强行用同一个ClassLoader实例加载同一个类，
则会报错attempted duplicate class definition for {your class}

3、重复加载
https://www.javatt.com/p/82688
java -classpath(-cp)加载配置jar包（classes）时，会按照书写定义顺序加载class，之后重复加载的class会被忽略，只有第一个生效
Idea中可以通过在Project Settings -> Modules -> Dependencies中通过上下箭头调整jar加载顺序，其实也就是调整-classpath(-cp)后的jar包书写顺序
Tomcat下的jar包貌似不同版本加载策略不同
spring-boot是自定义的jar包加载策略，顺序未确认，猜测默认是按字母排序

4、如何检测同名类冲突
maven-enforcer-plugin

